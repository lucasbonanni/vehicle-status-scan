"""Add inspectors table

Revision ID: 002_add_inspectors
Revises: 001_initial_tables
Create Date: 2025-10-01 10:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '002_add_inspectors'
down_revision = '001_initial_tables'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Create inspector role enum
    op.execute("CREATE TYPE inspectorrole AS ENUM ('junior', 'senior', 'supervisor')")

    # Create inspector status enum
    op.execute("CREATE TYPE inspectorstatus AS ENUM ('active', 'inactive', 'suspended')")

    # Create inspectors table
    op.create_table('inspectors',
        sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('email', sa.String(length=255), nullable=False),
        sa.Column('first_name', sa.String(length=100), nullable=False),
        sa.Column('last_name', sa.String(length=100), nullable=False),
        sa.Column('phone', sa.String(length=20), nullable=True),
        sa.Column('role', sa.Enum('junior', 'senior', 'supervisor', name='inspectorrole'), nullable=False),
        sa.Column('license_number', sa.String(length=50), nullable=False),
        sa.Column('status', sa.Enum('active', 'inactive', 'suspended', name='inspectorstatus'), nullable=False),
        sa.Column('hire_date', sa.DateTime(), nullable=False),
        sa.Column('password_hash', sa.String(length=255), nullable=False),
        sa.Column('last_login', sa.DateTime(), nullable=True),
        sa.Column('failed_login_attempts', sa.Integer(), nullable=False),
        sa.Column('locked_until', sa.DateTime(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_inspectors_email'), 'inspectors', ['email'], unique=True)
    op.create_index(op.f('ix_inspectors_license_number'), 'inspectors', ['license_number'], unique=True)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_inspectors_license_number'), table_name='inspectors')
    op.drop_index(op.f('ix_inspectors_email'), table_name='inspectors')
    op.drop_table('inspectors')
    op.execute("DROP TYPE inspectorstatus")
    op.execute("DROP TYPE inspectorrole")
    # ### end Alembic commands ###
